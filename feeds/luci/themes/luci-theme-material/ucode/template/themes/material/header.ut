{#
	Material is a clean HTML5 theme for LuCI. It is based on luci-theme-bootstrap and MUI

	luci-theme-material
	Copyright 2015-2017 Lutty Yang <lutty@wcan.in>

	Have a bug? Please create an issue here on GitHub!
	https://github.com/LuttyYang/luci-theme-material/issues

	luci-theme-bootstrap:
	Copyright 2008 Steven Barth <steven@midlink.org>
	Copyright 2008-2016 Jo-Philipp Wich <jow@openwrt.org>
	Copyright 2012 David Menting <david@nut-bolt.nl>

	MUI:
	https://github.com/muicss/mui

	Licensed to the public under the Apache License 2.0
-#}

{%
	import { getuid, getspnam } from 'luci.core';

	const boardinfo = ubus.call('system', 'board');
	const hostname = striptags(boardinfo?.hostname ?? '?');

	http.prepare_content('text/html; charset=UTF-8');
-%}

<!DOCTYPE html>
<html lang="{{ dispatcher.lang }}">
<head>
<meta charset="utf-8">
<meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" name="viewport"/>
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="mobile-web-app-capable" content="yes">
<meta name="theme-color" content="#09c">
<meta name="msapplication-tap-highlight" content="no">
<meta name="msapplication-TileColor" content="#09c">
<meta name="application-name" content="{{ hostname }} - LuCI">
<meta name="apple-mobile-web-app-title" content="{{ hostname }} - LuCI">
<link rel="stylesheet" href="{{ media }}/cascade.css">
<link rel="icon" href="{{ media }}/logo_48.png" sizes="48x48">
<link rel="icon" href="{{ media }}/logo.svg" sizes="any">
{% if (node?.css): %}
<link rel="stylesheet" href="{{ resource }}/{{ node.css }}">
{% endif %}
<script src="{{ dispatcher.build_url('admin/translations', dispatcher.lang) }}"></script>
<script src="{{ resource }}/cbi.js"></script>
<title>{{ hostname }}{{ node?.title ? ` - ${striptags(node.title)}` : '' }} - LuCI</title>
{% if (css): %}
<style title="text/css">{{ css }}</style>
{% endif %}
</head>
<body class="lang_{{ dispatcher.lang }} {{ ctx.authsession ? 'logged-in' : '' }} {{ length(ctx.path) ? `node-${join('-', ctx.path)}` : 'node-main-login' }}" data-page="{{ entityencode(join('-', ctx.path), true) }}">
<header>
	<div class="fill">
		<div class="container">
			<span class="showSide"></span>
			<a id="logo" href="{{ ctx.authsession ? dispatcher.build_url('admin/status/overview') : '#' }}"><img src="{{ media }}/brand.png" alt="OpenWrt"></a>
			<a class="brand" href="#" style="font-size:2.2rem; font-weight:bold;">{{ hostname }}</a>
			<span class="status" id="indicators"></span>

			<!-- ÏÇ¨Ïö©Ïûê/Î°úÍ∑∏ÏïÑÏõÉ ÎìúÎ°≠Îã§Ïö¥ Î©îÎâ¥ -->
			<div class="header-menu-group">
				<div class="dropdown user-dropdown">
					<button class="dropdown-toggle">üë§ {{ ctx.username ?? 'User' }}</button>
					<ul class="dropdown-menu">
						<li><a href="#" data-modal="admin-modal">Í¥ÄÎ¶¨Ïûê ÏÑ§Ï†ï</a></li>
						<li><a href="#" data-modal="basic-modal">Í∏∞Î≥∏ÏÑ§Ï†ï</a></li>
						<li><a href="#" data-modal="smtp-modal">SMTP</a></li>
					</ul>
				</div>
				<div class="dropdown logout-dropdown">
					<button class="dropdown-toggle"><img src="/luci-static/material/icons/logout_custom.png" alt="logout" style="height:1.5em;vertical-align:middle;margin-right:0.5em;">Î°úÍ∑∏ÏïÑÏõÉ</button>
					<ul class="dropdown-menu">
						<li><a href="#" data-modal="reboot-modal">Ïû¨ÏãúÏûë</a></li>
						<li><a href="#" data-modal="shutdown-modal">ÏãúÏä§ÌÖú Ï¢ÖÎ£å</a></li>
					</ul>
				</div>
			</div>
		</div>
	</div>
</header>
<div class="main">
	<div style="" class="loading"><span><div class="loading-img"></div>{{ _('Collecting data...') }}</span></div>
	<div class="main-left" id="mainmenu" style="display:none"></div>
	<div class="main-right">
		<div class="modemenu-buttons" style="display:none">
			<ul id="modemenu"></ul>
		</div>
		<div class="darkMask"></div>
		<div id="maincontent">
			<div class="container">
				{% if (getuid() == 0 && getspnam('root')?.pwdp === '' && ctx.authsession): %}
					<div class="alert-message warning">
						<h4>{{ _('No password set!') }}</h4>
						<p>{{ _('There is no password set on this router. Please configure a root password to protect the web interface.') }}</p>
						{% if (dispatcher.lookup("admin/system/admin")): %}
						  <div class="right"><a class="btn" href="{{ dispatcher.build_url("admin/system/admin") }}">{{ _('Go to password configuration...') }}</a></div>
						{% endif %}
					</div>
				{% endif %}

				{% if (boardinfo?.rootfs_type == "initramfs"): %}
					<div class="alert-message warning">
						<h4>{{ _('System running in recovery (initramfs) mode.') }}</h4>
						<p>{{ _('No changes to settings will be stored and are lost after rebooting. This mode should only be used to install a firmware upgrade') }}</p>
						{% if (dispatcher.lookup("admin/system/flash")): %}
						  <div class="right"><a class="btn" href="{{ dispatcher.build_url("admin/system/flash") }}">{{ _('Go to firmware upgrade...') }}</a></div>
						{% endif %}
					</div>
				{% endif %}

				<noscript>
					<div class="alert-message warning">
						<h4>{{ _('JavaScript required!') }}</h4>
						<p>{{ _('You must enable JavaScript in your browser or LuCI will not work properly.') }}</p>
					</div>
				</noscript>

				<div id="tabmenu" style="display:none"></div>

				<!-- Î™®Îã¨ HTML ÏÇΩÏûÖ (Ïà®ÍπÄ ÏÉÅÌÉú) -->
				<div id="admin-modal" class="custom-modal" style="display:none"></div>
				<div id="basic-modal" class="custom-modal" style="display:none"></div>
				<div id="smtp-modal" class="custom-modal" style="display:none"></div>
				<div id="reboot-modal" class="custom-modal" style="display:none"></div>
				<div id="shutdown-modal" class="custom-modal" style="display:none"></div>
			</div>
		</div>
	</div>
</div>

<!-- Î™®Îã¨ Ïä§ÌÅ¨Î¶ΩÌä∏ -->
<script>
function openModal(id, html) {
  var modal = document.getElementById(id);
  if (modal) {
    modal.innerHTML = html + '<button class="modal-close" onclick="closeModal(\''+id+'\')">Îã´Í∏∞</button>';
    modal.style.display = 'block';
    document.body.classList.add('modal-overlay-active');
  }
}
function closeModal(id) {
  var modal = document.getElementById(id);
  if (modal) {
    modal.style.display = 'none';
    modal.innerHTML = '';
    document.body.classList.remove('modal-overlay-active');
  }
}
document.addEventListener('DOMContentLoaded', function() {
  document.querySelectorAll('[data-modal]').forEach(function(el) {
    el.addEventListener('click', function(e) {
      e.preventDefault();
      var id = el.getAttribute('data-modal');
      if (window.renderModalContent && id) {
        openModal(id, window.renderModalContent(id));
      }
    });
  });
});
</script>
